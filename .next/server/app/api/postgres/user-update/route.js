"use strict";(()=>{var e={};e.id=982,e.ids=[982],e.modules={30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},55447:(e,r,t)=>{t.r(r),t.d(r,{headerHooks:()=>l,originalPathname:()=>g,requestAsyncStorage:()=>p,routeModule:()=>i,serverHooks:()=>d,staticGenerationAsyncStorage:()=>c,staticGenerationBailout:()=>_});var s={};t.r(s),t.d(s,{POST:()=>POST}),t(78976);var a=t(10884),o=t(16132),u=t(46837),n=t(95798);async function POST(e,r){let t=await e.json(),{auth0_id:s}=t;if(!s)return n.Z.json({message:"Missing auth0_id parameter"},{status:400});try{let e=await (0,u.J)("SELECT id, auth0_id, email, username, created_at, picture FROM users WHERE auth0_id = $1",[s]);if(0===e.rows.length)return n.Z.json({message:"User not found"},{status:404});return n.Z.json({user:e.rows[0]},{status:200})}catch(e){return console.error("Error fetching user:",e),n.Z.json({message:"Internal Server Error"},{status:500})}}let i=new a.AppRouteRouteModule({definition:{kind:o.x.APP_ROUTE,page:"/api/postgres/user-update/route",pathname:"/api/postgres/user-update",filename:"route",bundlePath:"app/api/postgres/user-update/route"},resolvedPagePath:"C:\\Users\\STW\\OneDrive\\Dokumenty\\VSC Projects\\Tasker-For-Firebase\\app\\api\\postgres\\user-update\\route.ts",nextConfigOutput:"",userland:s}),{requestAsyncStorage:p,staticGenerationAsyncStorage:c,serverHooks:d,headerHooks:l,staticGenerationBailout:_}=i,g="/api/postgres/user-update/route"},46837:(e,r,t)=>{t.d(r,{J:()=>executeQuery});let s=require("pg"),a={user:process.env.DB_USER,password:process.env.DB_PASSWORD,host:process.env.DB_HOST,database:process.env.DB_NAME,port:parseInt(process.env.DB_PORT,10),ssl:!1},o=new s.Pool(a);async function executeQuery(e,r){try{let t=await o.connect(),s=await t.query(e,r);return t.release(),s}catch(e){throw console.error("Błąd zapytania do bazy danych:",e),e}}}};var r=require("../../../../webpack-runtime.js");r.C(e);var __webpack_exec__=e=>r(r.s=e),t=r.X(0,[955],()=>__webpack_exec__(55447));module.exports=t})();